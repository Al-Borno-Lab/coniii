# Equations of 4-spin Ising model.

# Written on 2018/12/11.
from numpy import zeros, exp
from scipy.special import logsumexp

def calc_observables(params):
	"""
	Give each set of parameters concatenated into one array.
	"""
	Cout = zeros((10))
	H = params[0:4]
	J = params[4:10]
	logZ = logsumexp(	,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+\
	H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+\
	H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+\
	H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+\
	H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+\
	H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+\
	H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+\
H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]
)	Cout[0] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]*-1) - logZ )
	Cout[1] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]*-1) - logZ )
	Cout[2] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]*-1) - logZ )
	Cout[3] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]*-1) - logZ )
	Cout[4] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Cout[5] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Cout[6] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]*-1,-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Cout[7] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Cout[8] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]*-1,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Cout[9] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]*-1,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]*-1,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]*-1,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]*-1,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )

	return(Cout)

def p(params):
	"""
	Give each set of parameters concatenated into one array.
	"""
	Cout = zeros((10))
	H = params[0:4]
	J = params[4:10]
	H = params[0:4]
	J = params[4:10]
	Pout = zeros((16))
	logZ = logsumexp(	,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5],+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],+\
	H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],+\
	H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],+\
	H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+\
	H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5],-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5],-H[0]+\
	H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5],-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+\
	H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5],-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5],-H[0]-H[1]-H[2]+\
H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5],-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]
)	Pout[0] = exp( logsumexp(,+H[0]+H[1]+H[2]+H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )
	Pout[1] = exp( logsumexp(,+H[0]+H[1]+H[2]-H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]) - logZ )
	Pout[2] = exp( logsumexp(,+H[0]+H[1]-H[2]+H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]) - logZ )
	Pout[3] = exp( logsumexp(,+H[0]+H[1]-H[2]-H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]) - logZ )
	Pout[4] = exp( logsumexp(,+H[0]-H[1]+H[2]+H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]) - logZ )
	Pout[5] = exp( logsumexp(,+H[0]-H[1]+H[2]-H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]) - logZ )
	Pout[6] = exp( logsumexp(,+H[0]-H[1]-H[2]+H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]) - logZ )
	Pout[7] = exp( logsumexp(,+H[0]-H[1]-H[2]-H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]) - logZ )
	Pout[8] = exp( logsumexp(,-H[0]+H[1]+H[2]+H[3]-J[0]-J[1]-J[2]+J[3]+J[4]+J[5]) - logZ )
	Pout[9] = exp( logsumexp(,-H[0]+H[1]+H[2]-H[3]-J[0]-J[1]+J[2]+J[3]-J[4]-J[5]) - logZ )
	Pout[10] = exp( logsumexp(,-H[0]+H[1]-H[2]+H[3]-J[0]+J[1]-J[2]-J[3]+J[4]-J[5]) - logZ )
	Pout[11] = exp( logsumexp(,-H[0]+H[1]-H[2]-H[3]-J[0]+J[1]+J[2]-J[3]-J[4]+J[5]) - logZ )
	Pout[12] = exp( logsumexp(,-H[0]-H[1]+H[2]+H[3]+J[0]-J[1]-J[2]-J[3]-J[4]+J[5]) - logZ )
	Pout[13] = exp( logsumexp(,-H[0]-H[1]+H[2]-H[3]+J[0]-J[1]+J[2]-J[3]+J[4]-J[5]) - logZ )
	Pout[14] = exp( logsumexp(,-H[0]-H[1]-H[2]+H[3]+J[0]+J[1]-J[2]+J[3]-J[4]-J[5]) - logZ )
	Pout[15] = exp( logsumexp(,-H[0]-H[1]-H[2]-H[3]+J[0]+J[1]+J[2]+J[3]+J[4]+J[5]) - logZ )

	Pout = Pout[::-1]
	return(Pout)
